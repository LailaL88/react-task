{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["count","query","window","matchMedia","size","App","props","slider","React","createRef","pic1","pic2","pic3","pic4","pic5","pic6","pic7","pic0","pic8","images","Previous","bind","Next","GoToSlide1","GoToSlide2","GoToSlide3","GoToSlide4","GoToSlide5","GoToSlide6","GoToSlide7","matches","this","current","style","transform","transition","addEventListener","class","id","onClick","ref","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6122c9cb.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {FaArrowCircleLeft} from 'react-icons/fa';\nimport {FaArrowCircleRight} from 'react-icons/fa';\n\n\nlet count = 1;\nlet query = window.matchMedia(\"(max-width: 686px)\");\nlet size = 380;\n        \nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.slider = React.createRef();\n        this.pic1 = React.createRef();\n        this.pic2 = React.createRef();\n        this.pic3 = React.createRef();\n        this.pic4 = React.createRef();\n        this.pic5 = React.createRef();\n        this.pic6 = React.createRef();\n        this.pic7 = React.createRef();\n        this.pic0= React.createRef();\n        this.pic8 = React.createRef();\n        this.images = [this.pic0, this.pic1, this.pic2, this.pic3, this.pic4, this.pic5, this.pic6, this.pic7,  this.pic8];\n        this.Previous = this.Previous.bind(this);\n        this.Next = this.Next.bind(this);\n        this.GoToSlide1 = this.GoToSlide1.bind(this);\n        this.GoToSlide2 = this.GoToSlide2.bind(this);\n        this.GoToSlide3 = this.GoToSlide3.bind(this);\n        this.GoToSlide4 = this.GoToSlide4.bind(this);\n        this.GoToSlide5 = this.GoToSlide5.bind(this);\n        this.GoToSlide6 = this.GoToSlide6.bind(this);\n        this.GoToSlide7 = this.GoToSlide7.bind(this);\n      }\n      \n     Previous(){\n        if(query.matches){\n            size = 240;\n        }\n        if (count <= 0) return;\n        count--;\n        this.slider.current.style.transform = 'translateX(' + (-size * count) + 'px)';\n        this.slider.current.style.transition = \"transform 1s ease-in-out\";\n        this.slider.current.addEventListener(\"transitionend\", () => {\n            if (this.images[count] === this.pic0) {\n                this.slider.current.style.transition = \"none\";\n                count = 7;\n                this.slider.current.style.transform = 'translateX(' + (-size * count) + 'px)';\n            }\n        })\n      }\n      \n Next(){\n     if(query.matches){\n            size = 240;\n        }\n    if (count >= 8) return;\n        count++;\n        this.slider.current.style.transform = 'translateX(' + (-size * count) + 'px)';\n        this.slider.current.style.transition = \"transform 1s ease-in-out\";\n        this.slider.current.addEventListener(\"transitionend\", () => {\n     if (this.images[count] === this.pic8) {\n            this.slider.current.style.transition = \"none\";\n            count = 1;\n            this.slider.current.style.transform = 'translateX(' + (-size * count) + 'px)';\n        } \n        })\n      }\n\nGoToSlide1(){\n    count = 1;\n    if(query.matches){\n            size = 240;\n        }\n    this.slider.current.style.transform = 'translateX(' + (-size * count) + 'px)';   \n}\n\nGoToSlide2(){\n    count = 2;\n    if(query.matches){\n            size = 240;\n        }\n    this.slider.current.style.transform = 'translateX(' + (-size * count) + 'px)';  \n}\n\nGoToSlide3(){\n    count = 3;\n    if(query.matches){\n            size = 240;\n        }\n    this.slider.current.style.transform = 'translateX(' + (-size * count) + 'px)';   \n}\n\nGoToSlide4(){\n    count = 4;\n    if(query.matches){\n            size = 240;\n        }\n    this.slider.current.style.transform = 'translateX(' + (-size * count) + 'px)';  \n}\n\nGoToSlide5(){\n    count = 5;\n    if(query.matches){\n            size = 240;\n        }\n    this.slider.current.style.transform = 'translateX(' + (-size * count) + 'px)';\n}\n\nGoToSlide6(){\n    count = 6;\n    if(query.matches){\n            size = 240;\n        }\n    this.slider.current.style.transform = 'translateX(' + (-size * count) + 'px)';\n}\n\nGoToSlide7(){\n    count = 7;\n    if(query.matches){\n            size = 240;\n        }\n    this.slider.current.style.transform = 'translateX(' + (-size * count) + 'px)';\n}\n     \n    render(){\n        \n    return ( \n        <div class=\"wrapper\">\n        <i id=\"prevBtn\" ><FaArrowCircleLeft onClick={this.Previous}/></i>\n        <i id=\"nextBtn\"><FaArrowCircleRight onClick={this.Next}/></i>\n        <div class=\"slider-container\">\n            <div class=\"slider\" id=\"sliderid\" ref={this.slider}>\n                <div class=\"pic7\" ref={this.pic0}></div>\n                <div class=\"pic2\" ref={this.pic2}></div>\n                <div class=\"pic1\" ref={this.pic1}></div>\n                <div class=\"pic3\" ref={this.pic3}></div>\n                <div class=\"pic4\" ref={this.pic4}></div>\n                <div class=\"pic5\" ref={this.pic5}></div>\n                <div class=\"pic6\" ref={this.pic6}></div>\n                <div class=\"pic7\" ref={this.pic7}></div>\n                <div class=\"pic2\" ref={this.pic8}></div>\n            </div>\n        </div>\n        <button onClick = {this.GoToSlide1}>1</button>\n        <button onClick = {this.GoToSlide2}>2</button>\n        <button onClick = {this.GoToSlide3}>3</button>\n        <button onClick = {this.GoToSlide4}>4</button>\n        <button onClick = {this.GoToSlide5}>5</button>\n        <button onClick = {this.GoToSlide6}>6</button>\n        <button onClick = {this.GoToSlide7}>7</button>\n    </div>\n    );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}